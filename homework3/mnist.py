# -*- coding: utf-8 -*-
"""MNIST.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hwAnzLjybd7Xz01HeawAqFT3T5A4_uI2
"""

from sklearn.datasets import fetch_openml
from sklearn.neural_network import MLPClassifier
from sklearn.ensemble import GradientBoostingClassifier
from sklearn import metrics
from sklearn.ensemble import BaggingClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.tree import DecisionTreeClassifier

X, y = fetch_openml('mnist_784', version=1, return_X_y=True)
X = X / 255.0

X_train, X_test = X[:60000], X[60000:]
y_train, y_test = y[:60000], y[60000:]

clf = GradientBoostingClassifier(n_estimators=100, learning_rate=0.01)
clf.fit(X_train, y_train)
pred = clf.predict(X_test)
print(metrics.accuracy_score(y_test, pred))

bc = BaggingClassifier(base_estimator=DecisionTreeClassifier())
bc.fit(X_train, y_train)
predbc = bc.predict(X_test)
print(metrics.accuracy_score(y_test, predbc))

bc = RandomForestClassifier(n_estimators=150, n_jobs=-1)
bc.fit(X_train, y_train)
predbc = bc.predict(X_test)
print(metrics.accuracy_score(y_test, predbc))

bc = DecisionTreeClassifier()
bc.fit(X_train, y_train)
predbc = bc.predict(X_test)
print(metrics.accuracy_score(y_test, predbc))
