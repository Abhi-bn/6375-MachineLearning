# -*- coding: utf-8 -*-
"""GradientBoostingClassifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jH2cqsi1_qY5-yR387qqolNBFU9WpbRF
"""

import csv
from sklearn.ensemble import GradientBoostingClassifier
from sklearn import metrics

clauses = [300, 500, 1000, 1500, 1800]
samples = [100, 1000, 5000]
dataset = ['train', 'valid', 'test']
base_path = 'hw3_part1_data'

final_result = {}
for sample in samples:
    for clause in clauses:
        data = [0] * len(dataset)
        label = [0] * len(dataset)
        for i, sets in enumerate(dataset):
            x = []
            y = []
            with open(base_path + '/' + sets + '_c' + str(clause) + '_d' + str(sample) + '.csv', newline='') as csvfile:
                for row in csv.reader(csvfile):
                    x.append([int(x)for x in row[:len(row) - 1]])
                    y.append(int(row[-1]))
                data[i] = x
                label[i] = y

        name = str(clause) + " " + str(sample)

        clf = GradientBoostingClassifier(n_estimators=200, learning_rate=0.01)
        clf.fit(data[0]+data[1], label[0]+label[1])
        pred = clf.predict(data[2])
        print(name, metrics.accuracy_score(label[2], pred), metrics.f1_score(label[2], pred))

        final_result.setdefault(name, {})
        final_result[name]['f1_score'] = metrics.f1_score(label[2], pred)
        final_result[name]['accuracy_score'] = metrics.accuracy_score(label[2], pred)
print(final_result)
